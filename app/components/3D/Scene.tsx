/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 C:\Users\kembe\Documents\lomba-amikom\public\scene.glb -t 
*/

'use client';

import * as THREE from 'three'
import React, { useRef, useLayoutEffect } from 'react'
import { SpotLight, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useThree } from '@react-three/fiber';
import gsap from 'gsap';
import { useGSAP } from '@gsap/react';

gsap.registerPlugin(useGSAP)


type GLTFResult = GLTF & {
  nodes: {
    model: THREE.Mesh
  }
  materials: {
    place_holder: THREE.MeshStandardMaterial
  }
}

export function Sofa(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scene.glb') as GLTFResult;

  return (
    <>
      <pointLight intensity={50} position={[1, 5, 1]} />
      <hemisphereLight intensity={5} color={'#0000ff'} position={[10, 10, 10]} />
      <group {...props} dispose={null}>
        <mesh geometry={nodes.model.geometry} material={materials.place_holder} scale={3  } />
      </group>
    </>
  )
}

useGLTF.preload('/scene.glb')
